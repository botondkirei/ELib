proc SCHEMATIC_ADPLL {} {
make accumulator -orient RX -name xi2 -origin {1030 480}
make multiplier -name xi1 -origin {630 190}
make name_net -name clk -origin {-30 90}
make name_net -name clk -origin {1160 500}
make name_net -name in1 -origin {-10 -120}
make name_net -name out1 -origin {1130 50}
make sum_junct -name xi3 -origin {930 50}
make constant -orient R90 -name xi4 -consval 1 -origin {630 -120}
make multiplier -orient RY -name xi5 -origin {630 50}
make sub2 -name xi6 -origin {450 50}
make gain -name xi7 -gain 1 -origin {1040 50}
make multiplier -name xi8 -origin {290 50}
make accumulator -name xi9 -origin {100 70}
make signal_source -name xi10 -stype 2 -origin {-160 -100}
make duty_cycle_clk_source -name xi11 -origin {-160 90}
make constant -orient R90Y -name xi12 -consval 100 -origin {290 200}
make constant -orient R90Y -name xi13 -consval 1 -origin {630 340}
make constant -orient RY -name xi14 -origin {-350 -120}
make name_net -name clk -origin {710 230}
make accumulator -name xi0 -origin {820 210}
make constant -orient RY -name xi15 -consval .5 -origin {-350 90}
  make_wire 630 -80 630 10
  make_wire 670 50 900 50
  make_wire 590 190 530 190
  make_wire 530 50 480 50
  make_wire 530 50 590 50
  make_wire 450 460 450 80
  make_wire 1150 50 1150 460
  make_wire 330 50 420 50
  make_wire 450 460 950 460
  make_wire 530 50 530 190
  make_wire 180 50 250 50
  make_wire -30 90 -70 90
  make_wire -30 90 20 90
  make_wire 1150 460 1110 460
  make_wire 1160 500 1110 500
  make_wire 1160 500 1200 500
  make_wire -310 -120 -260 -120
  make_wire 0 -120 0 50
  make_wire 0 50 20 50
  make_wire -10 -120 -30 -120
  make_wire -10 -120 0 -120
  make_wire 1130 50 1090 50
  make_wire 1130 50 1150 50
  make_wire 630 230 630 300
  make_wire 290 90 290 160
  make_wire 740 190 670 190
  make_wire 930 190 900 190
  make_wire 680 230 710 230
  make_wire 710 230 740 230
  make_wire 960 50 1000 50
  make_wire 930 190 930 80
  make_wire -310 90 -250 90
}

